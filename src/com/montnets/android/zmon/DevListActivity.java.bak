package com.montnets.android.zmon;

import java.util.ArrayList;

import cn.mw.p2p.Request.AddDevRequest;
import cn.mw.p2p.adpter.DeviceAdapter;
import cn.mw.p2p.bean.VedioPointBean;
import cn.mw.p2p.handler.MethodListCount;
import cn.mw.p2p.handler.Threadhandler;
import cn.mw.p2p.unitily.ExitApplication;
import cn.mw.p2p.unitily.MsgEnum;
import cn.mw.p2p.unitily.P2pBaseUrl;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.database.Cursor;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class DevListActivity extends Activity {
	
	private String userIDString;//用户名
	private String loginSession = null;
	private ImageButton imgbtnBack;
	private ImageButton imgbtnAdd;
	private ListView lvDevList;
	private ArrayList<VedioPointBean> videoPoints = null;
	private DeviceAdapter deviceAdapter;
	private Cursor cursor;
	private ProgressDialog dialog;
	private Threadhandler thd;
	private String baseurlString;
	private String DevID;//设备ID
	private DeviceManageAdapter deviceManageAdapter;
	private String loginType;
	
	@Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(1);
        setContentView(R.layout.devlist_layout);
        ExitApplication.getInstance().addActivity(this);
		SharedPreferences sp = getSharedPreferences("mwp2p", MODE_PRIVATE);
		userIDString = sp.getString("userInfo", "").split(",")[0];
		loginSession = sp.getString("userInfo", "").split(",")[2];
		loginType = sp.getString("loginType", "0");
		System.out.println("DevListActivity-用户ID：" + userIDString);
		baseurlString = P2pBaseUrl.BaseUrl(sp);
		initUI();
    }
	
	/**
	 * 初始化UI
	 */
	private void initUI() {
		imgbtnBack = (ImageButton) findViewById(R.id.back_btn);
		imgbtnBack.setOnClickListener(new backOnClickListener());
		imgbtnAdd = (ImageButton) findViewById(R.id.btn_add);
		if(loginType.equals("1"))
		{
			//设备登录隐藏设备添加功能
			imgbtnAdd.setVisibility(View.GONE);
		}
		imgbtnAdd.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				
				LayoutInflater factory = LayoutInflater.from(DevListActivity.this);
				View textEntryView = factory.inflate(R.layout.bindevice,null);
				final EditText hostid = (EditText) textEntryView.findViewById(R.id.edtHostID);
				final EditText hostpwd = (EditText)textEntryView.findViewById(R.id.edtHostPwd);

				AlertDialog msgdialog = new AlertDialog.Builder(DevListActivity.this)
						.setIcon(android.R.drawable.ic_input_get)
						.setTitle("添加设备")
						.setView(textEntryView)
						.setPositiveButton("确定",new DialogInterface.OnClickListener() {
									public void onClick(DialogInterface dialog1,int whichButton) {
										DevID = hostid.getText().toString().trim();
										String strPwd = hostpwd.getText().toString().trim();
										if(DevID.equals("") || strPwd.equals(""))
										{
											Toast.makeText(DevListActivity.this, "设备ID或密码不能为空！", 0).show();
											return;
										}
										AddDevRequest adr = new AddDevRequest();
										adr.setAccount(userIDString);
										adr.setLoginSession(loginSession);
										adr.setDevID(DevID);
										adr.setDevKey(strPwd);
										adr.setChannelName(DevID);
										dialog = ProgressDialog.show(DevListActivity.this, "", "正在添加设备，请等待...", true);
										dialog.setCancelable(true);
										thd = new Threadhandler(mHandler, adr, baseurlString);
										thd.start();
									}
								})
						.setNegativeButton("取消",new DialogInterface.OnClickListener() {
									public void onClick(DialogInterface dialog,int whichButton) {
									}
								}).create();
				msgdialog.show();
			}
		});
		videoPoints = getDataSqlite();
		lvDevList = (ListView)findViewById(R.id.lvDevList);
		deviceManageAdapter = new DeviceManageAdapter();
		this.lvDevList.setAdapter(deviceManageAdapter);
		deviceAdapter.closeDB(cursor);
		deviceAdapter.closeDB();
	}
	
	/**
	 * 获取设备列表
	 * @return
	 */
	private ArrayList<VedioPointBean> getDataSqlite()
	{
		deviceAdapter = new DeviceAdapter(DevListActivity.this);
//		dialog = ProgressDialog.show(DevListActivity.this, "", "获取数据中，请等待...", true);
		videoPoints = MethodListCount.getDataArrayListForSqlite2(cursor, deviceAdapter, DevListActivity.this);
//		dialog.dismiss();
		return videoPoints;

	}

	/**
	 * 返回操作
	 * 
	 * @author Administrator
	 * 
	 */
	private final class backOnClickListener implements View.OnClickListener {

		@Override
		public void onClick(View v) {
			DevListActivity.this.finish();
		}
	}
	
	
		
	
    //=======================TODO 线程操作==============================
    private final Handler mHandler = new Handler()
    {
    	public void handleMessage(Message msg)
    	{
			dialog.dismiss();
			int msgID = msg.what;
			switch (msgID) {
			case MsgEnum.SUCCESS:
				System.out.println("添加设备成功");
				String resString = msg.getData().getString("ParamResult");
				String[] res = null;
				if (!resString.equals("") && resString != null) {
					res = resString.split(",");
				}
				// 插入本地数据库
				VedioPointBean vpb = new VedioPointBean();
				vpb.setDevID(res[0]);
				vpb.setChannelNo(res[1]);
				vpb.setName(res[2]);
				if (res[3].equals("1")) {
					vpb.setOnline(true);
				}
				else {
					vpb.setOnline(false);
				}
				vpb.setPtzFlag(Integer.parseInt(res[4]));
				vpb.setURL("");
				deviceAdapter.openDB();
				deviceAdapter.Insert(vpb);
				deviceAdapter.closeDB();
				//刷新列表
				initUI();
				Toast.makeText(DevListActivity.this, "设备添加成功！", 0).show();
				break;
			case MsgEnum.OK:
				//删除本地数据库中设备
				deviceAdapter.Delete(DevID);
				deviceAdapter.closeDB();
				//刷新列表
				initUI();
				Toast.makeText(DevListActivity.this, "删除成功！", 0).show();
				break;
			case MsgEnum.SESSION_TIMEOUT:
				Toast.makeText(DevListActivity.this, "SESSION超时！", 0).show();
				break;
			case MsgEnum.DEVICE_EXISTS_NULL:
				Toast.makeText(DevListActivity.this, "设备不存在！", 0).show();
				break;
			case MsgEnum.ACCOUNT_NOT_EXIST:
				Toast.makeText(DevListActivity.this, "用户不存在！", 0).show();
				break;
			case MsgEnum.PASSWORD_ERROR:
				Toast.makeText(DevListActivity.this, "密码错误！", 0).show();
				break;
			case MsgEnum.DEV_IS_OTHERUSER:
				Toast.makeText(DevListActivity.this, "设备已属于其他用户！", 0).show();
				break;
			case MsgEnum.SERVER_ERROR:
				Toast.makeText(DevListActivity.this, "操作失败！", 0).show();
				break;
			case MsgEnum.DEVICE_EXIST:
				Toast.makeText(DevListActivity.this, "设备已经添加！", 0).show();
				break;
			default:
				break;
			}
    	}
	
    };

    //===================================================
    public class DeviceManageAdapter extends BaseAdapter {

    	public DeviceManageAdapter(){
    		
    	}

    	public int getCount() {
    		return videoPoints.size();
    	}

    	public Object getItem(int paramInt) {
    		return videoPoints.get(paramInt);
    	}

    	public long getItemId(int paramInt) {
    		return 0L;
    	}

    	public View getView(int paramInt, View paramView, ViewGroup paramViewGroup) {
    		viewHoder localviewHoder;
    		if (paramView == null) {
    			paramView = LayoutInflater.from(DevListActivity.this).inflate(R.layout.deviceitem, null, false);
    			localviewHoder = new viewHoder();
    			localviewHoder.ivonlie = (ImageView) paramView.findViewById(R.id.ivOnline);
    			localviewHoder.textview = ((TextView) paramView.findViewById(R.id.txtName));
    			localviewHoder.ivSet = ((ImageButton) paramView.findViewById(R.id.ivSet));
    			localviewHoder.ivdel = (ImageButton)paramView.findViewById(R.id.ivDel);
    			paramView.setTag(localviewHoder);
    			final VedioPointBean localVedioPointBean = (VedioPointBean) getItem(paramInt);
    			if(localVedioPointBean.isOnline())
    			{
    				localviewHoder.ivonlie.setBackgroundResource(R.drawable.sp);
    			}
    			else {
    				localviewHoder.ivonlie.setBackgroundResource(R.drawable.sp2);
    			}
    			localviewHoder.textview.setText(localVedioPointBean.getName());
    			//设备配置
    			localviewHoder.ivSet.setOnClickListener(new View.OnClickListener() {
    				
    				@Override
    				public void onClick(View v) {
    					
    					if(!localVedioPointBean.isOnline())
    					{
    						Toast.makeText(DevListActivity.this, "设备不在线，无法进行参数配置", 0).show();
    						return;
    					}
//    					Toast.makeText(DevListActivity.this, "设备ID："+localVedioPointBean.getDevID(), 0).show();
    					Intent intent = new Intent(DevListActivity.this, DeviceParamSet2.class);
    					intent.putExtra("DevID", localVedioPointBean.getDevID());
    					intent.putExtra("ChannelNO", localVedioPointBean.getChannelNo());
    					intent.putExtra("ChannelName", localVedioPointBean.getName());
    					startActivity(intent);
    				}
    			});
    			//设备删除
    			localviewHoder.ivdel.setOnClickListener(new View.OnClickListener() {
    				
    				@Override
    				public void onClick(View v) {
    					if(loginType.equals("1"))
    					{
    						Toast.makeText(DevListActivity.this, "设备登录不能进行删除操作！", 0).show();
    						return;
    					}
    					LayoutInflater factory = LayoutInflater.from(DevListActivity.this);
    					View textEntryView = factory.inflate(R.layout.bindevice,null);
    					final EditText hostid = (EditText) textEntryView.findViewById(R.id.edtHostID);
    					hostid.setVisibility(View.GONE);
    					final EditText hostpwd = (EditText)textEntryView.findViewById(R.id.edtHostPwd);

    					AlertDialog msgdialog = new AlertDialog.Builder(DevListActivity.this)
    							.setIcon(android.R.drawable.ic_input_get)
    							.setTitle("确认密码")
    							.setView(textEntryView)
    							.setPositiveButton("确定",new DialogInterface.OnClickListener() {
    									public void onClick(DialogInterface dialog1,int whichButton) {
    										String pwdString = hostpwd.getText().toString().trim();
    										if(pwdString.equals(""))
    										{
    											Toast.makeText(DevListActivity.this, "密码不能为空!", 0).show();
    											return;
    										}
    										DevID = localVedioPointBean.getDevID();
    										AddDevRequest adr = new AddDevRequest();
    										adr.setAccount(userIDString);
    										adr.setLoginSession(loginSession);
    										adr.setDevID(DevID);
    										adr.setDevKey(pwdString);
    										dialog = ProgressDialog.show(DevListActivity.this, "", "正在删除设备，请等待...",true);
    										dialog.setCancelable(true);
    										thd = new Threadhandler(mHandler, adr, baseurlString, "del");
    										thd.start();
    										
    									}
    								})
    							.setNegativeButton("取消",new DialogInterface.OnClickListener() {
    									public void onClick(DialogInterface dialog,int whichButton) {
    									}
    								}).create();
    					msgdialog.show();
    					
    				}
    			});
    			
    		} else {
    			localviewHoder = (viewHoder) paramView.getTag();
    		}
    		return paramView;
    	}

    	public final class viewHoder {
    		ImageButton ivSet;
    		ImageButton ivdel;
    		ImageView ivonlie;
    		TextView textview;
    	}    	
    }
}
